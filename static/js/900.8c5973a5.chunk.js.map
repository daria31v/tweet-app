{"version":3,"file":"static/js/900.8c5973a5.chunk.js","mappings":"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","sources":["components/TweetsList/TweetsList.styled.js","components/TweetCadr/TweetCard.styled.js","components/Avatar/Avatar.styled.js","components/Avatar/Avatar.jsx","components/TweetCadr/TweetCard.jsx","components/TweetsList/TweetsList.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const WrapperTweetsList = styled.div`\r\n  display: flex;\r\n  justify-items: center;\r\n  align-items: center;\r\n  :hover{\r\n    text-shadow: 2px 0 2px #7d5bcd, 0 1px 5px #5736a3a6, -1px 0 5px #7d5bcd,\r\n    0 -1px 2px #5736a3a6;\r\n  }  \r\n`;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  width: 100%;\r\n  \r\n`;\r\n\r\nexport const Box = styled.div`\r\n  display: block;\r\n  width: 380px;\r\n  height: 460px;\r\n  color: #ebd8ff;\r\n  border-radius: 20px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  :hover{\r\n    box-shadow: 5px 0 2px #5CD3A8 \r\n  } \r\n`;\r\n\r\nexport const BoxLogo = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: left;\r\n  padding-top: 20px;\r\n  padding-left: 20px;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nexport const ImageWraper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 28px;\r\n`;\r\n\r\nexport const BoxAvatar = styled.div`\r\n  position: relative;\r\n  left: 0;\r\n  top: -25px;\r\n  z-index: 100;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  display: block;\r\n  width: 80px;\r\n  height: 80px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 8px solid #ebd8ff;\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px #ae7be3,\r\n    inset 0px 4.39163px 3.29372px #fbf8ff;\r\n  border-radius: 80px;\r\n`;\r\nexport const BoxUser = styled.div`\r\n  margin: 0;\r\n`;\r\nexport const BoxName = styled.div`\r\nposition: relative;\r\nleft: 0;\r\ntop: -40px;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  margin-top: 4px;\r\n  font-style: italic;\r\n  \r\n`;\r\nexport const BoxCard = styled.div`\r\n margin-bottom: 20px;\r\n`;\r\nexport const BoxBtn = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const CardWrapper = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Card = styled.li`\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 1.2;\r\n  :not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n  padding: 14px 28px;\r\n  background-color: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 1.22;\r\n  text-transform: uppercase;\r\n  border-radius: 10px;\r\n  :hover,\r\n  :focus,\r\n  :active{\r\n    background-color: #5CD3A8;\r\n  }\r\n`;\r\n\r\nexport const Decor = styled.img`\r\n  position: relative;\r\n  top: -80px;\r\n  left: 0;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AvatarImg = styled.img`\r\n/* position: absolute; */\r\n/* padding: 9.5px 8.5px ; */\r\n`;","// import avatar from 'images/avatar_default.png';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport {AvatarImg} from './Avatar.styled'\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport const Avatar = ({avatar}) => {\r\n    return (      \r\n        <>\r\n        <AvatarImg src={avatar} alt=\"avatar\" width=\"80\" height=\"80\"></AvatarImg>        \r\n        </>     \r\n    );\r\n  };\r\n\r\n  Avatar.prototype = {\r\n    avatar: PropTypes.string.isRequired,\r\n  }.isRequired;","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  CardWrapper,\r\n  BoxLogo,\r\n  Button,\r\n  Card,\r\n  BoxCard,\r\n  BoxBtn,\r\n  BoxAvatar,\r\n  ImageWraper,\r\n  Decor,\r\n  BoxUser,\r\n  Name,\r\n  BoxName,\r\n} from \"./TweetCard.styled\";\r\nimport users from \"../../serves/users.json\";\r\nimport { Logo } from \"components/Logo/Logo\";\r\nimport { Avatar } from \"../Avatar/Avatar\";\r\nimport picture from \"../../images/picture.png\";\r\nimport decor from \"images/decor.png\";\r\nimport avatar from \"images/avatar_default.png\";\r\n\r\nexport const TweetCard = () => {\r\n  // console.log(data);\r\n  const tweets = users;\r\n\r\n  return (\r\n    <Container>\r\n      {tweets.map((tweet) => {\r\n        return (\r\n          <Box key={tweet.id}>\r\n            <BoxLogo>\r\n              <Logo />\r\n            </BoxLogo>\r\n            <ImageWraper>\r\n              <img\r\n                src={picture}\r\n                alt=\"backgraund\"\r\n                width=\"308\"\r\n                height=\"168\"\r\n              ></img>\r\n            </ImageWraper>\r\n            <CardWrapper>\r\n              <BoxUser>\r\n                <BoxAvatar>\r\n                  <Avatar avatar={avatar} />\r\n                </BoxAvatar>\r\n\r\n                <Decor src={decor} alt=\"decor\" width=\"380\" height=\"8\"></Decor>\r\n                <BoxName>\r\n                  <Name>{tweet.user}</Name>\r\n                </BoxName>\r\n                <BoxCard>\r\n                  <ul>\r\n                    <Card>{tweet.tweets} TWEETS</Card>\r\n                    <Card>{tweet.followers} FOLLOWERS</Card>\r\n                  </ul>\r\n                </BoxCard>\r\n                <BoxBtn>\r\n                  <Button type=\"button\">Follow</Button>\r\n                </BoxBtn>\r\n              </BoxUser>\r\n            </CardWrapper>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { WrapperTweetsList } from \"./TweetsList.styled\";\r\nimport { TweetCard } from \"../TweetCadr/TweetCard\";\r\n\r\nexport const TweetsList = () => {\r\n  return (\r\n    <WrapperTweetsList>\r\n      <TweetCard />\r\n    </WrapperTweetsList>\r\n  );\r\n};\r\n\r\nTweetsList.protoType = {\r\n  tweets: PropTypes.array.isRequired,\r\n}.isRequired;\r\n","import styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 8px 0;\r\n  margin-right: auto;\r\n  color:  #EBD8FF;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  :hover,\r\n  :focus {\r\n    color: #edbc2b;;\r\n  }\r\n`;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nconsole.log(React.version);\r\nimport PropTypes from \"prop-types\";\r\nimport { HiArrowLeft } from 'react-icons/hi';\r\nimport { StyledLink } from './BackLink.styled';\r\n\r\nexport const BackLink = ({ to, children }) => {\r\n  return (\r\n    <StyledLink to={to}>\r\n      <HiArrowLeft size=\"24\" />\r\n      {children}\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nBackLink.prototype = {\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.elementType.isRequired,\r\n}.isRequired;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  `;\r\n  export const Section = styled.section`\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;  \r\n`;\r\nexport const Title = styled.h2`\r\n    text-align: center;\r\n  font-size: 48px;\r\n  font-style: italic;\r\n  text-transform: uppercase;\r\n  padding:  5px 10px 5px 10px;\r\n  color: #edbc2b;\r\n  text-shadow: 2px 0 2px #7d5bcd, 0 1px 5px #5736a3a6, -1px 0 5px #7d5bcd,\r\n    0 -1px 2px #5736a3a6;\r\n`;\r\nexport const BoxTweets = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;  \r\n`;","// import { SearchBox } from '../../components/SearchBox/SearchBox';\r\n// import { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { TweetsList } from '../../components/TweetsList/TweetsList';\r\n// import { useSearchParams } from 'react-router-dom';\r\n// import { getSearchMovie } from '../../Service/apiThemovieBb';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {BackLink} from '../../components/BackLink/BackLink';\r\nimport { Container, Section, Title, BoxTweets } from './Tweets.styled';\r\n\r\nimport users from '../../serves/users.json';\r\n\r\nconst Tweets = () => {\r\n//   const [query, setQuery] = useState('');\r\n//   const [tweets, setTweets] = useState([]);\r\nconst location = useLocation();\r\nconst backLinkHref = location.state?.from ?? '/';\r\n//   const [searchParams, setSearchParams] = useSearchParams();\r\n//   const searchQuery = searchParams.get('query') ?? '';\r\n\r\n//   useEffect(() => {\r\n//     if (!searchQuery) {\r\n//       return;\r\n//     }\r\n\r\n//     getSearchMovie(searchQuery).then(setMovies);\r\n//   }, [searchQuery]);\r\n\r\n//   const handleChange = evt => {\r\n//     setQuery(evt.target.value);\r\n//   };\r\n\r\n//   const handleSubmitForm = evt => {\r\n//     evt.preventDefault();\r\n//     setSearchParams({ query });\r\n//   };\r\n\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <BoxTweets>\r\n          <BackLink to={backLinkHref}/>\r\n      {/* <SearchBox\r\n        value={query}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmitForm}\r\n      /> */}\r\n      <Title>TWEETS OUR USERS</Title>\r\n        </BoxTweets>\r\n        \r\n      \r\n      <TweetsList tweets={users} />\r\n\r\n      </Section>    \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tweets;"],"names":["WrapperTweetsList","styled","div","_templateObject","_taggedTemplateLiteral","Container","section","Box","_templateObject2","BoxLogo","_templateObject3","ImageWraper","_templateObject4","BoxAvatar","_templateObject5","BoxUser","_templateObject6","BoxName","_templateObject7","Name","span","_templateObject8","BoxCard","_templateObject9","BoxBtn","_templateObject10","CardWrapper","_templateObject11","Card","li","_templateObject12","Button","button","_templateObject13","Decor","img","_templateObject14","AvatarImg","Avatar","_ref","avatar","_jsx","_Fragment","children","src","alt","width","height","prototype","PropTypes","isRequired","TweetCard","tweets","users","map","tweet","_jsxs","Logo","picture","user","followers","type","id","TweetsList","protoType","StyledLink","Link","console","log","React","BackLink","to","HiArrowLeft","size","Section","Title","h2","BoxTweets","_location$state$from","_location$state","backLinkHref","useLocation","state","from"],"sourceRoot":""}