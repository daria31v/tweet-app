{"version":3,"file":"static/js/356.46c1055c.chunk.js","mappings":"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","sources":["components/TweetsList/TweetsList.styled.js","components/TweetCadr/TweetCard.styled.js","components/Avatar/Avatar.styled.js","components/Avatar/Avatar.jsx","components/TweetCadr/TweetCard.jsx","redux/selectors.jsx","components/TweetsList/TweetsList.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\nexport const ListCards = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n   gap: 20px;\n  :hover{\n    text-shadow: 2px 0 2px #7d5bcd, 0 1px 5px #5736a3a6, -1px 0 5px #7d5bcd,\n    0 -1px 2px #5736a3a6;\n  }  \n`;\nexport const Card = styled.li`\n  margin: 0;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n`;\n\nexport const Box = styled.div`\n  display: block;\n  width: 380px;\n  height: 460px;\n  color: #ebd8ff;\n  border-radius: 20px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  :hover {\n    box-shadow: 5px 0 2px #5cd3a8;\n  }\n`;\n\nexport const BoxLogo = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: left;\n  padding-top: 20px;\n  padding-left: 20px;\n  margin-bottom: auto;\n`;\n\nexport const ImageWraper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 28px;\n`;\n\nexport const BoxAvatar = styled.div`\n  position: relative;\n  left: 0;\n  top: -25px;\n  z-index: 100;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  display: block;\n  width: 80px;\n  height: 80px;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  align-items: center;\n  border: 8px solid #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 80px;\n`;\nexport const BoxUser = styled.div`\n  margin: 0;\n`;\nexport const BoxName = styled.div`\n  position: relative;\n  left: 0;\n  top: -40px;\n`;\n\nexport const Name = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  margin-top: 4px;\n  font-style: italic;\n\n`;\nexport const BoxCard = styled.div`\n  margin-bottom: 20px;\n`;\nexport const BoxBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n`;\n\nexport const CardWrapper = styled.div`\n  display: block;\n  text-align: center;\n`;\n\nexport const Card = styled.p`\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.2;\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Button = styled.input`\n  z-index: -1;\n  opacity: 0;\n  display: block;\n  width: 0;\n  height: 0;\n  :active {\n    background-color: #5cd3a8;\n  }\n  :disabled{\n    background-color: #ebd8ff;\n  }\n`;\nexport const Label = styled.label`\n  user-select: none;\n  display: inline-block;\n  margin: 0 5px 0 0;\n  /* position: relative; */\n`;\nexport const NameBtn = styled.span`\n  width: 196px;\n  height: 50px;\n  padding: 14px 28px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  border-radius: 10px;\n  text-shadow: none;\n  color: #373737;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #5cd3a8;\n  }\n  background-color: ${props => props.isActive ? '#5cd3a8':'#ebd8ff'};\n  `;\n\n\nexport const Decor = styled.img`\n  position: relative;\n  top: -80px;\n  left: 0;\n`;\n","import styled from \"styled-components\";\n\nexport const AvatarImg = styled.img`\n    width: 80px;\n    height: 80px;\n    border-radius: 75px;\n`;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {AvatarImg} from './Avatar.styled'\n\nexport const Avatar = ({avatar}) => {\n    return (      \n        <>\n        <AvatarImg src={avatar} alt=\"avatar\" ></AvatarImg>        \n        </>     \n    );\n  };\n\n  Avatar.prototype = {\n    avatar: PropTypes.string.isRequired,\n  }.isRequired;","import React, { useState, useEffect } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  CardWrapper,\n  BoxLogo,\n  Button,\n  Card,\n  BoxCard,\n  BoxBtn,\n  BoxAvatar,\n  ImageWraper,\n  Decor,\n  BoxUser,\n  Name,\n  BoxName,\n  NameBtn,\n  Label\n} from \"./TweetCard.styled\";\nimport { Logo } from \"components/Logo/Logo\";\nimport { Avatar } from \"../Avatar/Avatar\";\nimport picture from \"../../images/picture.png\";\nimport decor from \"images/decor.png\";\nimport { fetchUpdateFollowers } from \"../../redux/operation\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport const TweetCard = ({ name, tweets, followers, avatar, id }) => {\n  const dispatch = useDispatch();\n  const [isActive, setIsActive] = useState(false);\n  const [state, setState] = useState([]);\n  const [status, setStatus] = useState(\"follow\");\n\n  const addTweet = (select, isActive, status) => {\n    setState(prev => [...prev, { select, isActive, status }]);\n  };\n  const deleteTweet = (select, isActive, status) => {\n    setState(prev => prev.filter(tweets => tweets.status !== status));\n  };\n  \n  useEffect(() => {\n    const newTweets = localStorage.getItem(\"state\");\n    if (newTweets !== null) {\n      const parsedTweets = JSON.parse(newTweets);\n      setState(parsedTweets);\n    } else {\n      setState();\n    }\n  }, []);\n\n  const handleToggle = () => {\n    setStatus(\"following\");\n    setIsActive(true);\n    const update = followers + 1;\n    const data = { isActive: isActive, status: status, select: id };\n    addTweet(data);\n    dispatch(fetchUpdateFollowers({ id, update }));\n\n    if (isActive === true) {\n      const update = followers - 1;\n      dispatch(fetchUpdateFollowers({ id, update }));\n      setIsActive(false);\n      setStatus(\"follow\");\n      const tweet = { isActive: isActive, status: status, select: id };\n      deleteTweet(tweet);\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  }, [state]);\n\n  const value = +followers;\n  const formatingValue = value.toLocaleString(\"en-US\");\n\n  return (\n    <>\n      <Box>\n        <BoxLogo>\n          <Logo />\n        </BoxLogo>\n        <ImageWraper>\n          <img src={picture} alt=\"backgraund\" width=\"308\" height=\"168\"></img>\n        </ImageWraper>\n        <CardWrapper>\n          <BoxUser>\n            <BoxAvatar>\n              <Avatar avatar={avatar} />\n            </BoxAvatar>\n            <Decor src={decor} alt=\"decor\" width=\"380\" height=\"8\"></Decor>\n            <BoxName>\n              <Name>{name}</Name>\n            </BoxName>\n            <BoxCard>\n              <Card>{tweets} TWEETS</Card>\n              <Card>{formatingValue} FOLLOWERS</Card>\n            </BoxCard>\n            <BoxBtn>\n              <Label>\n                <Button\n                  type=\"checkbox\"\n                  name={id}\n                  onChange={handleToggle}\n                  status={status}\n                  isActive={isActive}\n                ></Button>\n                <NameBtn isActive={isActive}>\n                  {isActive ? \"Following\" : \"Follow\"}\n                </NameBtn>\n              </Label>\n            </BoxBtn>\n          </BoxUser>\n        </CardWrapper>\n      </Box>\n    </>\n  );\n};\n\nTweetCard.prototype = {\n  name: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n}\n\n","\nexport const selectAllTweets = state => state.tweets.item;\nexport const selectIsLoading = state => state.tweets.isLoading;\nexport const selectError = state => state.tweets.error;\n\n\n  \n","import React from \"react\";\nimport { Card, ListCards, Wrapper } from \"./TweetsList.styled\";\nimport { TweetCard } from \"../TweetCadr/TweetCard\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading, selectError, selectAllTweets } from \"redux/selectors\";\n\nexport const TweetsList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const users = useSelector(selectAllTweets);\n \n  return (\n    <Wrapper>\n      {error && !isLoading && (\n        <h3>Something went wrong... ♫ ♫ ♫ Try again ♫ ♫ ♫</h3>\n      )}\n      <ListCards>\n        {users.map(user => (\n          <Card key={user.id}>\n            <TweetCard\n              name={user.user}\n              tweets={user.tweets}\n              followers={user.followers}\n              avatar={user.avatar}\n              id={user.id}\n            />\n          </Card>\n        ))}\n      </ListCards>\n    </Wrapper>\n  );\n};\n\n\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  margin-right: auto;\n  color:  #EBD8FF;\n  text-decoration: none;\n  font-weight: 500;\n  :hover,\n  :focus {\n    color: #edbc2b;;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\";\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n      Back\n    </StyledLink>\n  );\n};\n\nBackLink.prototype = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.elementType.isRequired\n}.isRequired;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 0 20px;\n`;\nexport const Section = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 48px;\n  font-style: italic;\n  text-transform: uppercase;\n  padding: 5px 10px 5px 10px;\n  color: #edbc2b;\n  text-shadow: 2px 0 2px #7d5bcd, 0 1px 5px #5736a3a6, -1px 0 5px #7d5bcd,\n    0 -1px 2px #5736a3a6;\n`;\nexport const BoxTweets = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\nexport const LoadMore = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: 2px solid #a58ae5;\n  border-radius: 10px;\n  height: 10px;\n  width: 150px;\n  padding: 25px;\n  text-transform: uppercase;\n  background: none;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  color: #ebd8ff;\n  font-size: 14px;\n  :hover,\n  :focus{\n    color: #edbc2b;\n    border-color: #edbc2b;\n  }\n`;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TweetsList } from \"../../components/TweetsList/TweetsList\";\nimport { useLocation } from \"react-router-dom\";\nimport { BackLink } from \"../../components/BackLink/BackLink\";\nimport { fetchAllTweets } from \"../../redux/operation\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Container,\n  Section,\n  Title,\n  BoxTweets,\n  LoadMore\n} from \"./Tweets.styled\";\n\nconst Tweets = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n  const [page, setPage] = useState(1);\n  const [isVisibleBtn, setVisibleBtn] = useState(true);\n  const btn = document.getElementById(\"loadMore\");\n\n  const dispatch = useDispatch();\n\n  dispatch(fetchAllTweets(page));\n\n  const handleLoadMore = () => {\n    try {\n      const nextPage = setPage(prevState => prevState + 1);\n      dispatch(fetchAllTweets(nextPage));\n\n      if (page === 7) {\n        setVisibleBtn(false);\n        btn.style.display = \"none\";\n      }\n    } catch (error) {\n      alert(\"💥SOMETHING WENT WRONG! TRY LATER.\");\n    }\n  };\n\n  return (\n    <Container>\n      <Section>\n        <BoxTweets>\n          <BackLink to={backLinkHref} />\n          <Title>TWEETS OUR USERS</Title>\n        </BoxTweets>\n        <TweetsList />\n        <LoadMore\n          type=\"button\"\n          id=\"loadMore\"\n          visible={isVisibleBtn}\n          onClick={handleLoadMore}\n        >\n          Load More\n        </LoadMore>\n      </Section>\n    </Container>\n  );\n};\n\nexport default Tweets;\n\nTweets.prototype = {\n  isVisibleBtn: PropTypes.bool.isRequired,\n  handleLoadMore: PropTypes.func.isRequired\n}.isRequired;"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","ListCards","ul","_templateObject2","Card","li","_templateObject3","Box","section","BoxLogo","ImageWraper","_templateObject4","BoxAvatar","_templateObject5","BoxUser","_templateObject6","BoxName","_templateObject7","Name","span","_templateObject8","BoxCard","_templateObject9","BoxBtn","_templateObject10","CardWrapper","_templateObject11","p","_templateObject12","Button","input","_templateObject13","Label","label","_templateObject14","NameBtn","_templateObject15","props","isActive","Decor","img","_templateObject16","AvatarImg","Avatar","_ref","avatar","_jsx","_Fragment","children","src","alt","prototype","PropTypes","isRequired","TweetCard","name","tweets","followers","id","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setIsActive","_useState3","_useState4","state","setState","_useState5","_useState6","status","setStatus","useEffect","newTweets","localStorage","getItem","parsedTweets","JSON","parse","setItem","stringify","formatingValue","toLocaleString","_jsxs","Logo","picture","width","height","type","onChange","update","select","prev","concat","_toConsumableArray","addTweet","fetchUpdateFollowers","filter","deleteTweet","selectAllTweets","item","selectIsLoading","isLoading","selectError","error","TweetsList","useSelector","users","map","user","StyledLink","Link","BackLink","to","HiArrowLeft","size","Container","Section","Title","h2","BoxTweets","LoadMore","button","Tweets","_location$state$from","_location$state","backLinkHref","useLocation","from","page","setPage","isVisibleBtn","setVisibleBtn","btn","document","getElementById","fetchAllTweets","visible","onClick","nextPage","prevState","style","display","alert","handleLoadMore"],"sourceRoot":""}